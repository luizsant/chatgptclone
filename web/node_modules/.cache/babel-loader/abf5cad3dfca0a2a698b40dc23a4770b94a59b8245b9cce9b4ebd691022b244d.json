{"ast":null,"code":"var _jsxFileName = \"/home/luizsant/\\xC1rea de Trabalho/CursoDev/DIO.ME/GptClone/web/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport './styles/reset.css';\nimport { useState } from 'react';\nimport { makeRequest } from './api/api';\nimport SideMenu from './components/SideMenu/Sidemenu';\nimport ChatMessage from './components/ChatMessage/ChatMessage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [input, setInput] = useState(\"\");\n  const [chatLog, setChatLog] = useState([{\n    user: \"gpt\",\n    message: \"Como posso te ajudar hoje?\"\n  }]);\n  async function handleSubmit(e) {\n    e.preventDefault();\n    let response = await makeRequest({\n      prompt: input\n    });\n    response = response.data.split('\\n').map(line => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: line\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 18\n    }, this));\n    setChatLog([...chatLog, {\n      user: 'me',\n      message: `${input}`\n    }, {\n      user: 'gpt',\n      message: response\n    }]);\n    setInput(\"\");\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(SideMenu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"chatbox\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-log\",\n        children: chatLog.map((message, index) => /*#__PURE__*/_jsxDEV(ChatMessage, {\n          message: message\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input-holder\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            rows: \"1\",\n            className: \"chat-input-textarea\",\n            value: input,\n            onChange: e => setInput(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"AGMtxOWYH3785yCh7OPuKuIqpz4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","makeRequest","SideMenu","ChatMessage","jsxDEV","_jsxDEV","App","_s","input","setInput","chatLog","setChatLog","user","message","handleSubmit","e","preventDefault","response","prompt","data","split","map","line","children","fileName","_jsxFileName","lineNumber","columnNumber","className","index","onSubmit","rows","value","onChange","target","_c","$RefreshReg$"],"sources":["/home/luizsant/Área de Trabalho/CursoDev/DIO.ME/GptClone/web/src/App.js"],"sourcesContent":["import './App.css';\nimport './styles/reset.css';\nimport { useState} from 'react';\n\nimport {makeRequest} from './api/api'\nimport SideMenu from './components/SideMenu/Sidemenu'\nimport ChatMessage from './components/ChatMessage/ChatMessage'\n\nfunction App() {\n\n  const [input, setInput] = useState(\"\")\n  const [chatLog, setChatLog] = useState([{\n    user: \"gpt\",\n    message:\"Como posso te ajudar hoje?\"\n  }])\n\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    let response = await makeRequest({prompt: input})\n\n    response = response.data.split('\\n')\n    .map(line => <p>{line}</p>);\n\n    setChatLog([...chatLog, {\n      user: 'me', \n      message: `${input}`\n    },{\n      user: 'gpt', \n      message: response\n    }])\n    setInput(\"\")\n  }\n\n  return (\n    <div className='App'>\n\n      <SideMenu></SideMenu>\n\n      <section className='chatbox'>\n\n          <div className='chat-log'>\n            {chatLog.map((message, index)=>(\n              <ChatMessage key={index} message={message} />\n            ))}\n          </div>\n\n          <div className='chat-input-holder'>\n            <form onSubmit={handleSubmit}>\n              <input\n                rows='1'\n                className='chat-input-textarea'\n                value={input}\n                onChange={e =>setInput(e.target.value)}\n              >\n              </input>\n            </form>\n          </div>\n      </section>\n\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAO,oBAAoB;AAC3B,SAASA,QAAQ,QAAO,OAAO;AAE/B,SAAQC,WAAW,QAAO,WAAW;AACrC,OAAOC,QAAQ,MAAM,gCAAgC;AACrD,OAAOC,WAAW,MAAM,sCAAsC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE9D,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,CAAC;IACtCY,IAAI,EAAE,KAAK;IACXC,OAAO,EAAC;EACV,CAAC,CAAC,CAAC;EAGH,eAAeC,YAAYA,CAACC,CAAC,EAAE;IAC7BA,CAAC,CAACC,cAAc,EAAE;IAElB,IAAIC,QAAQ,GAAG,MAAMhB,WAAW,CAAC;MAACiB,MAAM,EAAEV;IAAK,CAAC,CAAC;IAEjDS,QAAQ,GAAGA,QAAQ,CAACE,IAAI,CAACC,KAAK,CAAC,IAAI,CAAC,CACnCC,GAAG,CAACC,IAAI,iBAAIjB,OAAA;MAAAkB,QAAA,EAAID;IAAI;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,CAAC;IAE3BhB,UAAU,CAAC,CAAC,GAAGD,OAAO,EAAE;MACtBE,IAAI,EAAE,IAAI;MACVC,OAAO,EAAG,GAAEL,KAAM;IACpB,CAAC,EAAC;MACAI,IAAI,EAAE,KAAK;MACXC,OAAO,EAAEI;IACX,CAAC,CAAC,CAAC;IACHR,QAAQ,CAAC,EAAE,CAAC;EACd;EAEA,oBACEJ,OAAA;IAAKuB,SAAS,EAAC,KAAK;IAAAL,QAAA,gBAElBlB,OAAA,CAACH,QAAQ;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAY,eAErBtB,OAAA;MAASuB,SAAS,EAAC,SAAS;MAAAL,QAAA,gBAExBlB,OAAA;QAAKuB,SAAS,EAAC,UAAU;QAAAL,QAAA,EACtBb,OAAO,CAACW,GAAG,CAAC,CAACR,OAAO,EAAEgB,KAAK,kBAC1BxB,OAAA,CAACF,WAAW;UAAaU,OAAO,EAAEA;QAAQ,GAAxBgB,KAAK;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACxB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACE,eAENtB,OAAA;QAAKuB,SAAS,EAAC,mBAAmB;QAAAL,QAAA,eAChClB,OAAA;UAAMyB,QAAQ,EAAEhB,YAAa;UAAAS,QAAA,eAC3BlB,OAAA;YACE0B,IAAI,EAAC,GAAG;YACRH,SAAS,EAAC,qBAAqB;YAC/BI,KAAK,EAAExB,KAAM;YACbyB,QAAQ,EAAElB,CAAC,IAAGN,QAAQ,CAACM,CAAC,CAACmB,MAAM,CAACF,KAAK;UAAE;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAEjC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MACH;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACH;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACA;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEN;AAEV;AAACpB,EAAA,CAvDQD,GAAG;AAAA6B,EAAA,GAAH7B,GAAG;AAyDZ,eAAeA,GAAG;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}